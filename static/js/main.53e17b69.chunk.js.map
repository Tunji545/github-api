{"version":3,"sources":["components/GithubProfile.js","components/GithubSearchForm.js","components/GithubSearch.js","App.js","reportWebVitals.js","index.js"],"names":["GithubProfile","className","src","this","props","avatar","width","height","alt","userName","bio","React","Component","Form","handleInput","e","setState","userInput","target","value","state","handleSubmit","bind","event","preventDefault","trim","onSearch","onSubmit","type","name","onChange","Search","handleSearch","searchTerm","console","log","isLoading","fetch","then","response","json","data","avatar_url","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAuBeA,E,uKAlBX,OACE,sBAAKC,UAAU,cAAf,UACE,qBACEA,UAAU,qBACVC,IAAKC,KAAKC,MAAMC,OAChBC,MAAM,MACNC,OAAO,MACPC,IAAI,WAEN,sBAAKP,UAAU,mBAAf,UACE,4BAAIE,KAAKC,MAAMK,WACf,4BAAIN,KAAKC,MAAMM,gB,GAdGC,IAAMC,W,OCuCnBC,E,kDAtCb,aAAe,IAAD,8BACZ,gBAOFC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZC,UAAWF,EAAEG,OAAOC,SARtB,EAAKC,MAAQ,CACXH,UAAW,IAEb,EAAKI,aAAe,EAAKA,aAAaC,KAAlB,gBALR,E,yDAcDC,GACXA,EAAMC,iBAEDrB,KAAKiB,MAAMH,UAAUQ,QAE1BtB,KAAKC,MAAMsB,SAASvB,KAAKiB,MAAMH,a,+BAI/B,OACE,uBAAMU,SAAUxB,KAAKkB,aAArB,UACE,oDACA,uBACEO,KAAK,OACLC,KAAK,YACLV,MAAOhB,KAAKiB,MAAMD,MAClBW,SAAU3B,KAAKW,cAEjB,gD,GAjCWH,IAAMC,WC6CVmB,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAUFC,aAAe,SAACC,GACdC,QAAQC,IAAIF,GACZ,EAAKjB,SAAS,CACZoB,WAAW,IAEbC,MAAM,gCAAD,OAAiCJ,IACnCK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKzB,SAAS,CACZoB,WAAW,EACX3B,SAAUgC,QAnBhB,EAAKrB,MAAQ,CACXX,SAAU,IAHA,E,gEAQZN,KAAK6B,aAAa,c,+BAmBlB,OACE,gCACE,cAAC,EAAD,CAAMN,SAAUvB,KAAK6B,eACpB7B,KAAKiB,MAAMX,SAASoB,KACnB,cAAC,EAAD,CACEpB,SAAUN,KAAKiB,MAAMX,SAASoB,KAC9BxB,OAAQF,KAAKiB,MAAMX,SAASiC,WAC5BhC,IAAKP,KAAKiB,MAAMX,SAASC,MAEzB,Y,GArCSC,IAAMC,W,MCOZ+B,MARf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,cAAC,EAAD,OCMS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.53e17b69.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass GithubProfile extends React.Component {\r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"github-user\">\r\n        <img\r\n          className=\"github-user_avatar\"\r\n          src={this.props.avatar}\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt=\"Avatar\"\r\n        />\r\n        <div className=\"github-user_info\">\r\n          <p>{this.props.userName}</p>\r\n          <p>{this.props.bio}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GithubProfile;\r\n","import React from \"react\";\r\n\r\nclass Form extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userInput: \"\"\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({\r\n      userInput: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (!this.state.userInput.trim()) return;\r\n\r\n    this.props.onSearch(this.state.userInput);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <p>Enter the username:</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"userInput\"\r\n          value={this.state.value}\r\n          onChange={this.handleInput}\r\n        />\r\n        <button>GO!</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport GithubProfile from \"./GithubProfile\";\r\nimport Form from \"./GithubSearchForm\";\r\n\r\nclass Search extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleSearch(\"Tunji545\");\r\n  }\r\n\r\n  handleSearch = (searchTerm) => {\r\n    console.log(searchTerm); \r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    fetch(`https://api.github.com/users/${searchTerm}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          userName: data\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSearch={this.handleSearch} />\r\n        {this.state.userName.name ? (\r\n          <GithubProfile\r\n            userName={this.state.userName.name}\r\n            avatar={this.state.userName.avatar_url}\r\n            bio={this.state.userName.bio}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import Search from \"./components/GithubSearch\";\r\nimport \"./App.css\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}